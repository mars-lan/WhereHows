apply plugin: 'play'

// Change this to listen on a different port
project.ext.httpPort = 19000

dependencies{
    // User defined libraries (will be copied to lib/ before `play compile`)
    play project(":wherehows-common")
    play project(":metadata-etl")

    play externalDependency.play_java_jdbc
    play externalDependency.slf4j_api
    play externalDependency.jasypt
    play externalDependency.kafka
    play externalDependency.kafka_clients

    playTest 'org.easytesting:fest-assert-core:2.0M10'
    playTest externalDependency.mockito
}

configurations {
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude group: 'log4j'

    all*.resolutionStrategy {
        dependencySubstitution {
            substitute module('org.slf4j:slf4j-log4j12') with module('ch.qos.logback:logback-classic:1.1.7')
            //prefer 'log4j-over-slf4j' over 'log4j'
            force 'com.typesafe:config:1.3.1', 'io.netty:netty:3.10.6.Final'
        }
    }
}

tasks.withType(PlayRun) {
    httpPort = project.ext.httpPort
}

model {
    components {
        play {
            platform play: '2.4.8', scala: '2.10'

            binaries.all {
                tasks.withType(PlatformScalaCompile) {
                    scalaCompileOptions.forkOptions.jvmArgs = ['-Xms1G', '-Xmx1G', '-Xss2M']
                }
            }
        }
    }

    distributions {
        playBinary {
            baseName = "wherehows-backend"
        }
    }
}
